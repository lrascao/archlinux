# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM env customization.
  #
  # If this property is not set, alacritty will set it to xterm-256color.
  #
  # Note that some xterm terminfo databases don't declare support for italics.
  # You can verify this by checking for the presence of `smso` and `sitm` in
  # `infocmp xterm-256color`.
  TERM: xterm-256color

window:
    # Window dimensions in character columns and lines
    # (changes require restart)
    dimensions:
      columns: 80
      lines: 24

    # Adds this many blank pixels of padding around the window
    # Units are physical pixels; this is not DPI aware.
    # (change requires restart)
    window.padding:
      x: 0
      y: 0
 
    # Spread additional padding evenly around the terminal content.
    dynamic_padding: false

    # Window decorations
    #
    # Available values:
    # - full: borders and title bar
    # - none: neither borders nor title bar
    # - transparent: title bar, transparent background and title bar buttons
    # - buttonless: title bar, transparent background, but no title bar buttons
    decorations: full

    # Startup Mode (changes require restart)
    #
    # Values for `startup_mode`:
    #   - Windowed
    #   - Maximized
    #   - Fullscreen
    #
    # Values for `startup_mode` (macOS only):
    #   - SimpleFullscreen
    startup_mode: Maximized

    # Display tabs using this many cells (changes require restart)
    tabspaces: 8

    # When true, bold text is drawn using the bright variant of colors.
    draw_bold_text_with_bright_colors: true

    # Background opacity
    opacity: 0.95

    # Allow terminal applications to change Alacritty's window title.
    dynamic_title: true

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: Monaco
    # Style can be specified to pick a specific face.
    style: Regular

  # The bold font face
  bold:
    family: Monaco
    # Style can be specified to pick a specific face.
    style: Bold

  # The italic font face
  italic:
    family: Monaco
    # Style can be specified to pick a specific face.
    # style: Italic

  # Point size of the font
  size: 10.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

# Should display the render timer
# Display the time it takes to redraw each frame.
debug:
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# Colors (iTerm 2 default theme)
iterm2: &iterm2
 # Default colors
 primary:
   background: '0x101421'
   foreground: '0xfffbf6'

 # Normal colors
 normal:
   black:   '0x2e2e2e'
   red:     '0xeb4129'
   green:   '0xabe047'
   yellow:  '0xf6c744'
   blue:    '0x47a0f3'
   magenta: '0x7b5cb0'
   cyan:    '0x64dbed'
   white:   '0xe5e9f0'

 # Bright colors
 bright:
   black:   '0x565656'
   red:     '0xec5357'
   green:   '0xc0e17d'
   yellow:  '0xf9da6a'
   blue:    '0x49a4f8'
   magenta: '0xa47de9'
   cyan:    '0x99faf2'
   white:   '0xffffff'

# point to one of the above
colors: *iterm2

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Possible values for `animation`
# `Ease`
# `EaseOut`
# `EaseOutSine`
# `EaseOutQuad`
# `EaseOutCubic`
# `EaseOutQuart`
# `EaseOutQuint`
# `EaseOutExpo`
# `EaseOutCirc`
# `Linear`
#
# To completely disable the visual bell, set its duration to 0.
#
bell:
  animation: Ease
  duration: 0

# Mouse bindings
#
# Currently doesn't support modifiers. Both the `mouse` and `action` fields must
# be specified.
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# Values for `action`:
# - Paste
# - PasteSelection
# - Copy (TODO)
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

    hide_when_typing: false

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Scrollback
#
scrolling:
  # How many lines of scrollback to keep,
  # '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line
  # scrolled when scrollback is enabled (history > 0).
  multiplier: 3

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
# shell:
#   program: /bin/bash
#   args:
#     - --login

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - None
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  - { key: Copy,                    action: Copy                             }
  - { key: Paste,                   action: Paste                            }
  - { key: L,        mods: Control, action: ClearLogNotice                   }
  - { key: L,        mods: Control, chars: "\x0c"                            }
  - { key: Home,     mods: Alt,     chars: "\x1b[1;3H"                       }
  - { key: Home,                    chars: "\x1bOH",        mode: AppCursor  }
  - { key: Home,                    chars: "\x1b[H",        mode: ~AppCursor }
  - { key: End,      mods: Alt,     chars: "\x1b[1;3F"                       }
  - { key: End,                     chars: "\x1bOF",        mode: AppCursor  }
  - { key: End,                     chars: "\x1b[F",        mode: ~AppCursor }
  - { key: PageUp,   mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~",     mode: Alt        }
  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                       }
  - { key: PageUp,   mods: Alt,     chars: "\x1b[5;3~"                       }
  - { key: PageUp,                  chars: "\x1b[5~"                         }
  - { key: PageDown, mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~",     mode: Alt        }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                       }
  - { key: PageDown, mods: Alt,     chars: "\x1b[6;3~"                       }
  - { key: PageDown,                chars: "\x1b[6~"                         }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                          }
  - { key: Back,                    chars: "\x7f"                            }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                        }
  - { key: Insert,                  chars: "\x1b[2~"                         }
  - { key: Delete,                  chars: "\x1b[3~"                         }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                       }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                       }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                       }
  - { key: Left,                    chars: "\x1b[D",        mode: ~AppCursor }
  - { key: Left,                    chars: "\x1bOD",        mode: AppCursor  }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                       }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                       }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                       }
  - { key: Right,                   chars: "\x1b[C",        mode: ~AppCursor }
  - { key: Right,                   chars: "\x1bOC",        mode: AppCursor  }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                       }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                       }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                       }
  - { key: Up,                      chars: "\x1b[A",        mode: ~AppCursor }
  - { key: Up,                      chars: "\x1bOA",        mode: AppCursor  }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                       }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                       }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                       }
  - { key: Down,                    chars: "\x1b[B",        mode: ~AppCursor }
  - { key: Down,                    chars: "\x1bOB",        mode: AppCursor  }
  - { key: F1,                      chars: "\x1bOP"                          }
  - { key: F2,                      chars: "\x1bOQ"                          }
  - { key: F3,                      chars: "\x1bOR"                          }
  - { key: F4,                      chars: "\x1bOS"                          }
  - { key: F5,                      chars: "\x1b[15~"                        }
  - { key: F6,                      chars: "\x1b[17~"                        }
  - { key: F7,                      chars: "\x1b[18~"                        }
  - { key: F8,                      chars: "\x1b[19~"                        }
  - { key: F9,                      chars: "\x1b[20~"                        }
  - { key: F10,                     chars: "\x1b[21~"                        }
  - { key: F11,                     chars: "\x1b[23~"                        }
  - { key: F12,                     chars: "\x1b[24~"                        }
  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                       }
  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                       }
  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                       }
  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                       }
  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                      }
  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                      }
  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                      }
  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                      }
  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                      }
  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                      }
  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                      }
  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                      }
  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                       }
  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                       }
  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                       }
  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                       }
  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                      }
  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                      }
  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                      }
  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                      }
  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                      }
  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                      }
  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                      }
  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                      }
  - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                       }
  - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                       }
  - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                       }
  - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                       }
  - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                      }
  - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                      }
  - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                      }
  - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                      }
  - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                      }
  - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                      }
  - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                      }
  - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                      }
  - { key: F1,       mods: Super,   chars: "\x1b[1;3P"                       }
  - { key: F2,       mods: Super,   chars: "\x1b[1;3Q"                       }
  - { key: F3,       mods: Super,   chars: "\x1b[1;3R"                       }
  - { key: F4,       mods: Super,   chars: "\x1b[1;3S"                       }
  - { key: F5,       mods: Super,   chars: "\x1b[15;3~"                      }
  - { key: F6,       mods: Super,   chars: "\x1b[17;3~"                      }
  - { key: F7,       mods: Super,   chars: "\x1b[18;3~"                      }
  - { key: F8,       mods: Super,   chars: "\x1b[19;3~"                      }
  - { key: F9,       mods: Super,   chars: "\x1b[20;3~"                      }
  - { key: F10,      mods: Super,   chars: "\x1b[21;3~"                      }
  - { key: F11,      mods: Super,   chars: "\x1b[23;3~"                      }
  - { key: F12,      mods: Super,   chars: "\x1b[24;3~"                      }
  - { key: NumpadEnter,             chars: "\n"                              }
  - { key: H,        mods: Control, chars: "\x1b[D"                          }  # allows vi navigation
  - { key: J,        mods: Control, chars: "\x1bOB"                          }
  - { key: K,        mods: Control, chars: "\x1bOA"                          }
  - { key: L,        mods: Control, chars: "\x1bOC"                          }
  - { key: Back,     mods: Command, chars: "\x1b\x7f"                        }  # delete entire line
  - { key: V,        mods: Command, action: Paste                            }
  # - { key: C,        mods: Command, action: Copy                             }
  # - { key: Q,        mods: Command, action: Quit                         }
  # - { key: W,        mods: Command, action: Quit                         }
  # - { key: Home,                    chars: "\x1bOH",   mode: AppCursor   }
  # - { key: Home,                    chars: "\x1b[H",   mode: ~AppCursor  }
  # - { key: End,                     chars: "\x1bOF",   mode: AppCursor   }
  # - { key: End,                     chars: "\x1b[F",   mode: ~AppCursor  }
  # - { key: Key0,     mods: Command, action: ResetFontSize                }
  # - { key: Equals,   mods: Command, action: IncreaseFontSize             }
  # - { key: Minus,    mods: Command, action: DecreaseFontSize             }
  # - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~"                   }
  # - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                   }
  # - { key: PageUp,                  chars: "\x1b[5~"                     }
  # - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~"                   }
  # - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                   }
  # - { key: PageDown,                chars: "\x1b[6~"                     }

  # - { key: PageUp,   mods: Shift,   action: ScrollPageUp                 }
  # - { key: PageDown, mods: Shift,   action: ScrollPageDown               }
  # - { key: End,      mods: Shift,   action: ScrollToBottom               }
  # - { key: Home,     mods: Shift,   action: ScrollToTop                  }

  # - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
  # - { key: Back,                    chars: "\x7f"                        }
  # - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
  # - { key: Insert,                  chars: "\x1b[2~"                     }
  # - { key: Delete,                  chars: "\x1b[3~"                     }
  # - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  # - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  # - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  # - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  # - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  # - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  # - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  # - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  # - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  # - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  # - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  # - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  # - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  # - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  # - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  # - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  # - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  # - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  # - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  # - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  # - { key: F1,                      chars: "\x1bOP"                      }
  # - { key: F2,                      chars: "\x1bOQ"                      }
  # - { key: F3,                      chars: "\x1bOR"                      }
  # - { key: F4,                      chars: "\x1bOS"                      }
  # - { key: F5,                      chars: "\x1b[15~"                    }
  # - { key: F6,                      chars: "\x1b[17~"                    }
  # - { key: F7,                      chars: "\x1b[18~"                    }
  # - { key: F8,                      chars: "\x1b[19~"                    }
  # - { key: F9,                      chars: "\x1b[20~"                    }
  # - { key: F10,                     chars: "\x1b[21~"                    }
  # - { key: F11,                     chars: "\x1b[23~"                    }
  # - { key: F12,                     chars: "\x1b[24~"                    }
  # - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                   }
  # - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                   }
  # - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                   }
  # - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                   }
  # - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                  }
  # - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                  }
  # - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                  }
  # - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                  }
  # - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                  }
  # - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                  }
  # - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                  }
  # - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                  }
  # - { key: F1,       mods: Control, chars: "\x1b[1;5P"                   }
  # - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                   }
  # - { key: F3,       mods: Control, chars: "\x1b[1;5R"                   }
  # - { key: F4,       mods: Control, chars: "\x1b[1;5S"                   }
  # - { key: F5,       mods: Control, chars: "\x1b[15;5~"                  }
  # - { key: F6,       mods: Control, chars: "\x1b[17;5~"                  }
  # - { key: F7,       mods: Control, chars: "\x1b[18;5~"                  }
  # - { key: F8,       mods: Control, chars: "\x1b[19;5~"                  }
  # - { key: F9,       mods: Control, chars: "\x1b[20;5~"                  }
  # - { key: F10,      mods: Control, chars: "\x1b[21;5~"                  }
  # - { key: F11,      mods: Control, chars: "\x1b[23;5~"                  }
  # - { key: F12,      mods: Control, chars: "\x1b[24;5~"                  }
  # - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                   }
  # - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                   }
  # - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                   }
  # - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                   }
  # - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                  }
  # - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                  }
  # - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                  }
  # - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                  }
  # - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                  }
  # - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                  }
  # - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                  }
  # - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                  }
  # - { key: F1,       mods: Command, chars: "\x1b[1;3P"                   }
  # - { key: F2,       mods: Command, chars: "\x1b[1;3Q"                   }
  # - { key: F3,       mods: Command, chars: "\x1b[1;3R"                   }
  # - { key: F4,       mods: Command, chars: "\x1b[1;3S"                   }
  # - { key: F5,       mods: Command, chars: "\x1b[15;3~"                  }
  # - { key: F6,       mods: Command, chars: "\x1b[17;3~"                  }
  # - { key: F7,       mods: Command, chars: "\x1b[18;3~"                  }
  # - { key: F8,       mods: Command, chars: "\x1b[19;3~"                  }
  # - { key: F9,       mods: Command, chars: "\x1b[20;3~"                  }
  # - { key: F10,      mods: Command, chars: "\x1b[21;3~"                  }
  # - { key: F11,      mods: Command, chars: "\x1b[23;3~"                  }
  # - { key: F12,      mods: Command, chars: "\x1b[24;3~"                  }
  # - { key: Apostrophe,              chars: "\u007E"                      }  # tilde (~)
  # - { key: RBracket, mods: Shift,   chars: "\u0060"                      }  # grave accent (`)
  # - { key: Key2,     mods: Alt,     chars: "\u0040"                      }  # commercial (`)
  # - { key: Key2,     mods: Shift,   chars: "\u0022"                      }  # quotation mark ()

